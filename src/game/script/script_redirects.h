bool (*_scr_get_bool)(int32_t index);
int32_t (*_scr_get_int)(int32_t index);
int32_t (*_scr_get_anim)(intptr_t a, int32_t b, int32_t c);
int32_t (*_scr_get_anim_tree)(intptr_t a, int32_t b);
float (*_scr_get_float)(int32_t index);
char *(*_scr_get_string)(int32_t index);
const char *(*_scr_get_const_string)(int32_t index);
const char *(*_scr_get_debug_string)(int32_t index);
char *(*_scr_get_istring)(int32_t index);
const char *(*_scr_get_const_istring)(int32_t index);
void (*_scr_get_vector)(int32_t index, vec3_t v);
int32_t (*_scr_get_func)(int32_t index);
int32_t (*_scr_get_type)(int32_t index);
int32_t (*_scr_get_pointer_type)(int32_t index);
int32_t (*_scr_get_entity_num)(int32_t index, gentity_t *entity);
int32_t (*_scr_get_num_param)(void);
void (*_scr_add_bool)(bool value);
void (*_scr_add_int)(int32_t value);
void (*_scr_add_float)(float value);
void (*_scr_add_anim)(int32_t value);
void (*_scr_add_undefined)(void);
void (*_scr_add_entity_num)(int32_t num, int32_t b);
void (*_scr_add_struct)(int32_t value);
void (*_scr_add_string)(char *string);
void (*_scr_add_istring)(char *string);
void (*_scr_add_const_string)(uint16_t string);
void (*_scr_add_vector)(vec3_t vector);
void (*_scr_add_object)(uint16_t value);
void (*_scr_add_array)(void);
void (*_scr_add_array_string_indexed)(uint16_t string);
void (*_scr_make_array)(void);
void (*_scr_begin_load_scripts)(void);
void (*_scr_begin_load_anim_trees)(void);
void (*_scr_end_load_scripts)(void);
void (*_scr_end_load_anim_trees)(void);
void (*_scr_precache_anim_trees)(void);
void (*_scr_free_scripts)(void);
void (*_scr_free_game_variable)(void);
void (*_scr_shutdown_system)(void);
bool (*_scr_is_system_active)(void);
void (*_scr_add_exec_thread)(int32_t a, int32_t b);
void (*_scr_add_exec_thread_ent_num)(int32_t a, int32_t b, int32_t c, int32_t d);
uint16_t (*_scr_exec_thread)(int32_t a, int32_t b);
uint16_t (*_scr_exec_thread_ent_num)(int32_t a, int32_t b, int32_t c, int32_t d);
bool UNUSED (*_scr_is_thread_alive)(uint16_t thread);
void (*_scr_error)(char *msg);
void (*_scr_error_with_dialog_message)(char *msg);
void (*_scr_param_error)(int32_t index, char *msg);
void (*_scr_object_error)(int32_t a);
void (*_scr_set_dynamic_entity_field)(int32_t a, int32_t b, int32_t c);
void (*_scr_free_entity_num)(int32_t a, int32_t b);
uint16_t (*_scr_get_entity_id)(int32_t a, int32_t b);
void (*_scr_set_class_map)(int32_t a, int32_t b);
void (*_scr_remove_class_map)(void);
void UNUSED (*_scr_spacer1)(void);
void UNUSED (*_scr_spacer2)(void);
void (*_scr_add_class_field)(uint16_t a, int32_t b, uint16_t c);
void (*_scr_add_fields)(int32_t a, int32_t b);
uint16_t (*_scr_find_field)(int32_t a, int32_t b);
int32_t (*_scr_get_offset)(uint16_t a, int32_t b);
void (*_scr_copy_entity_num)(int32_t a, int32_t b, int32_t c);
void (*_scr_init)(int32_t a, int32_t b);
void (*_scr_shutdown)(void);
void (*_scr_abort)(void);
void (*_scr_set_loading)(int32_t a);
void (*_scr_init_system)(int32_t a, int32_t b);
void (*_scr_alloc_game_variable)(void);
void UNUSED (*_scr_get_checksum)(int32_t a);
void UNUSED (*_scr_has_source_files)(void);
void UNUSED (*_scr_save_source)(int32_t a);
void UNUSED (*_scr_load_source)(int32_t a);
void UNUSED (*_scr_skip_source)(int32_t a);
void UNUSED (*_scr_save_pre)(int32_t a);
void UNUSED (*_scr_save_post)(int32_t a);
void UNUSED (*_scr_save_shutdown)(void);
void UNUSED (*_scr_spacer3)(void);
void UNUSED (*_scr_load_pre)(int32_t a, int32_t b);
void UNUSED (*_scr_load_shutdown)(void);
void UNUSED (*_scr_spacer4)(void);
int32_t (*_scr_load_script)(char *script);
intptr_t (*_scr_find_anim_tree)(intptr_t a, int32_t b);
void (*_scr_find_anim)(char *animtree, char *name, intptr_t anim);
int32_t (*_scr_get_function_handle)(char *script, char *function);
void (*_scr_free_thread)(uint16_t thread);
uint16_t UNUSED (*_scr_convert_thread_to_save)(uint16_t thread);
uint16_t UNUSED (*_scr_convert_thread_from_load)(uint16_t thread);
void (*_scr_set_string)(int32_t a, uint16_t string);
uint16_t (*_scr_alloc_string)(char *string, int32_t b);
void (*_scr_notify_num)(int32_t a, int32_t b, uint16_t c, int32_t d);
void (*_scr_notify_id)(uint16_t a, uint16_t b, int32_t c);
char *(*_sl_convert_to_string)(uint16_t string);
uint16_t (*_sl_get_string)(int32_t a, byte b);
uint16_t (*_sl_get_lowercase_string)(int32_t a, byte b);
uint16_t (*_sl_find_lowercase_string)(int32_t a);
uint16_t UNUSED (*_scr_create_canonical_filename)(int32_t a);
void (*_scr_set_time)(int32_t time);
void (*_scr_run_current_threads)(void);
void (*_scr_reset_timeout)(void);
int32_t (*_scr_get_anims_index)(int32_t a);
void UNUSED (*_scr_get_anims)(int32_t a);
void *(*_mt_alloc)(int32_t a, int32_t b);
void (*_mt_free)(void *a, int32_t b);
