//////////////
// settings //
//////////////

// prefix for all of our functions
prefix				scr_

// where to stash the data
output_directory	prototypes_output

// output declarations header?
output_declarations	true
declarations_name	script_declarations.h

// output redirects header and body?
output_redirects	true
redirects_header	script_redirects.h
redirects_body		script_redirects.c

// for unused functions, just as a reference
unused_define		UNUSED

//////////////////////////
// function definitions //
//////////////////////////

// NOTE: by default a blank definition will produce this definition:
// func test {} -> void test(void);

// return type by default is always void

//
// getters
//
func get_bool 
{
	return bool
	param index	int32_t
}

func get_int
{
	return int32_t
	param index	int32_t
}

func get_anim
{
	return int32_t
	param a intptr_t
	param b	int32_t
	param c	int32_t
}

func get_anim_tree
{
	return int32_t
	param a intptr_t
	param b	int32_t
}

func get_float
{
	return float
	param index	int32_t
}

func get_string
{
	return char *
	param index	int32_t
}

func get_const_string
{
	return const char *
	param index	int32_t
}

func get_debug_string
{
	return const char *
	param index	int32_t
}

func get_istring
{
	return char *
	param index	int32_t
}

func get_const_istring
{
	return const char *
	param index	int32_t
}

func get_vector
{
	param index	int32_t
	param v	vec3_t
}

func get_func
{
	return int32_t
	param index	int32_t
}

func get_type
{
	return int32_t
	param index	int32_t
}

func get_pointer_type
{
	return int32_t
	param index int32_t
}

func get_entity_num
{
	return int32_t
	param index	int32_t
	param entity gentity_t *
}

func get_num_param
{
	return int32_t
}

//
// setters
// 
func add_bool
{
	param value	bool
}

func add_int
{
	param value	int32_t
}

func add_float
{
	param value	float
}

func add_anim
{
	param value	int32_t
}

func add_undefined
{
}

func add_entity_num
{
	param num int32_t
	param b int32_t
}

func add_struct
{
	param value	int32_t
}

func add_string
{
	param string char *
}

func add_istring
{
	param string char *
}

func add_const_string
{
	param string uint16_t
}

func add_vector
{
	param vector vec3_t
}

func add_object
{
	param value uint16_t
}

func add_array
{
}

func add_array_string_indexed
{
	param string uint16_t
}

func make_array
{
}

//
// system stuff
//
func begin_load_scripts
{
}

func begin_load_anim_trees
{
}

func end_load_scripts
{
}

func end_load_anim_trees
{
}

func precache_anim_trees
{
}

func free_scripts
{
}

func free_game_variable
{
}

func shutdown_system
{
}

func is_system_active
{
	return bool
}

//
// threading / other system
//
func add_exec_thread
{
	param a int32_t
	param b int32_t
}

func add_exec_thread_ent_num
{
	param a int32_t
	param b int32_t
	param c int32_t
	param d int32_t
}

func exec_thread
{
	return uint16_t
	param a int32_t
	param b int32_t
}

func exec_thread_ent_num
{
	return uint16_t
	param a int32_t
	param b int32_t
	param c int32_t
	param d int32_t
}

func is_thread_alive
{
	return bool
	param thread uint16_t
	unused
}

func error
{
	param msg char *
}

func error_with_dialog_message
{
	param msg char *
}

func param_error
{
	param index int32_t
	param msg char *
}

func object_error
{
	param a int32_t
}

func set_dynamic_entity_field
{
	param a int32_t
	param b int32_t
	param c int32_t
}

func free_entity_num
{
	param a int32_t
	param b int32_t
}

func get_entity_id
{
	return uint16_t
	param a int32_t
	param b int32_t
}

func set_class_map
{
	param a int32_t
	param b int32_t
}

func remove_class_map
{
}

//
// spacers
//
func spacer1
{
	unused
}

func spacer2
{
	unused
}

//
//
//
func add_class_field
{
	param a uint16_t
	param b int32_t
	param c uint16_t
}

func add_fields
{
	param a int32_t
	param b int32_t
}

func find_field
{
	return uint16_t
	param a int32_t
	param b int32_t
}

func get_offset
{
	return int32_t
	param a uint16_t
	param b int32_t
}

func copy_entity_num
{
	param a int32_t
	param b int32_t
	param c int32_t
}

func init
{
	param a int32_t
	param b int32_t
}

func shutdown
{
}

func abort
{
}

func set_loading
{
	param a int32_t
}

func init_system
{
	param a int32_t
	param b int32_t
}

func alloc_game_variable
{
}

func get_checksum
{
	param a int32_t
	unused
}

func has_source_files
{
	unused
}

func save_source
{
	param a int32_t
	unused
}

func load_source
{
	param a int32_t
	unused
}

func skip_source
{
	param a int32_t
	unused
}

func save_pre
{
	param a int32_t
	unused
}

func save_post
{
	param a int32_t
	unused
}

func save_shutdown
{
	unused
}

//
// spacer
//
func spacer3
{
	unused
}

//
//
//
func load_pre
{
	param a int32_t
	param b int32_t
	unused
}

func load_shutdown
{
	unused
}

//
// spacer
//
func spacer4
{
	unused
}

//
//
//
func load_script
{
	return int32_t
	param script char *
}

func find_anim_tree
{
	return intptr_t
	param a intptr_t
	param b int32_t
}

func find_anim
{
	param animtree char *
	param name char *
	param anim intptr_t
}

func get_function_handle
{
	return int32_t
	param script char *
	param function char *
}

func free_thread
{
	param thread uint16_t
}

func convert_thread_to_save
{
	return uint16_t
	param thread uint16_t
	unused
}

func convert_thread_from_load
{
	return uint16_t
	param thread uint16_t
	unused
}

func set_string
{
	param a int32_t
	param string uint16_t
}

func alloc_string
{
	return uint16_t
	param string char *
	param b int32_t
}

func notify_num
{
	param a int32_t
	param b int32_t
	param c uint16_t
	param d int32_t
}

func notify_id
{
	param a uint16_t
	param b uint16_t
	param c int32_t
}

func sl_convert_to_string
{
	return char *
	param string uint16_t
	noprefix
}

func sl_get_string
{
	return uint16_t
	param a int32_t
	param b byte // really ??
	noprefix
}

func sl_get_lowercase_string
{
	return uint16_t
	param a int32_t
	param b byte // really ??
	noprefix
}

func sl_find_lowercase_string
{
	return uint16_t
	param a int32_t
	noprefix
}

func create_canonical_filename
{
	return uint16_t
	param a int32_t
	unused
}

func set_time
{
	param time int32_t
}

func run_current_threads
{
}

func reset_timeout
{
}

func get_anims_index
{
	return int32_t
	param a int32_t
}

func get_anims
{
	param a int32_t
	unused
}

func mt_alloc
{
	return void *
	param a int32_t
	param b int32_t
	noprefix
}

func mt_free
{
	param a void *
	param b int32_t
	noprefix
}