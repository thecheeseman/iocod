// SPDX-FileCopyrightText: 2023 thecheeseman
//
// SPDX-License-Identifier: GPL-3.0-or-later

#ifndef CORE_VERSION_H
#define CORE_VERSION_H

// ** Autogenerated by tools/make_version.py **
#define IOCOD_VERSION_MAJOR 0
#define IOCOD_VERSION_MINOR 1
#define IOCOD_VERSION_PATCH 0
//#define IOCOD_VERSION_PRERELEASE
//#define IOCOD_VERSION_BUILD_METADATA
// ** Autogenerated by tools/make_version.py **

#define IOCOD_VERSION \
    IOCOD_VERSION_ENCODE(IOCOD_VERSION_MAJOR, IOCOD_VERSION_MINOR, IOCOD_VERSION_PATCH)

// clang-format off
#define IOCOD_VERSION_STRING \
    IOCOD_VERSION_DECODE_MAJOR(IOCOD_VERSION) "." \
    IOCOD_VERSION_DECODE_MINOR(IOCOD_VERSION) "." \
    IOCOD_VERSION_DECODE_PATCH(IOCOD_VERSION)
// clang-format on

#ifdef IOCOD_VERSION_PRERELEASE
    #ifdef IOCOD_VERSION_BUILD_METADATA
        #define IOCOD_VERSION_STRING_FULL \
            IOCOD_VERSION_STRING "-" IOCOD_VERSION_PRERELEASE "+" IOCOD_VERSION_BUILD_METADATA
    #else
        #define IOCOD_VERSION_STRING_FULL IOCOD_VERSION_STRING "-" IOCOD_VERSION_PRERELEASE
    #endif
#else
    #define IOCOD_VERSION_STRING_FULL IOCOD_VERSION_STRING
#endif

/// @def IOCOD_VERSION_ENCODE
/// Encode version number into single value.
#define IOCOD_VERSION_ENCODE(major, minor, revision) \
    (((major) *1000000) + ((minor) *1000) + (revision))

/// @def IOCOD_VERSION_DECODE_MAJOR
/// Decode the major version from the full version value.
#define IOCOD_VERSION_DECODE_MAJOR(version) ((version) / 1000000)

/// @def IOCOD_VERSION_DECODE_MINOR
/// Decode the minor version from the full version value.
#define IOCOD_VERSION_DECODE_MINOR(version) ((version % 1000000) / 1000)

/// @def IOCOD_VERSION_DECODE_PATCH
/// Decode the patch number from the full version value.
#define IOCOD_VERSION_DECODE_PATCH(version) ((version) % 1000))

#endif // CORE_VERSION_H
